{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/AddTransaction.js","components/IncomeTransactions.js","components/IncomeList.js","components/ExpenseTransactions.js","components/ExpenseList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","state","action","type","incomeTransactions","payload","expenseTransactions","filter","incomeTransaction","id","expenseTransaction","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalContextProvider","children","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","deleteTransaction","addIncome","addExpense","Balance","useContext","incomeAmounts","map","incomeAmount","expenseAmounts","expenseAmount","totalIncome","reduce","acc","item","toFixed","totalExpenses","AddTransaction","useState","incomeText","income","setIncome","onChangeIncome","e","target","name","expenseText","expense","setExpense","onChangeExpense","onSubmit","preventDefault","newIncomeTransaction","uuidv4","placeholder","autoComplete","onChange","newExpenseTransaction","IncomeTransaction","onClick","IncomeList","console","log","ExpenseTransaction","ExpenseList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2258d85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Budget App</h1>\r\n        </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Header;","export default (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_INCOME\":\r\n        return {\r\n          ...state, //sincome transactions will be updated only not entire state\r\n          incomeTransactions: [action.payload, ...state.incomeTransactions] //action.payload update newly added income, spread out rest of income transactions\r\n        };\r\n      case \"ADD_EXPENSE\":\r\n        return {\r\n          ...state,\r\n          expenseTransactions: [action.payload, ...state.expenseTransactions]\r\n        };\r\n      case \"DELETE_TRANSACTION\":\r\n        return {\r\n          ...state,\r\n          incomeTransactions: state.incomeTransactions.filter(\r\n            incomeTransaction => incomeTransaction.id !== action.payload //if id of the transaction doesnt match the id of the payload then the id should be kept in the array\r\n          ),\r\n          expenseTransactions: state.expenseTransactions.filter(\r\n            expenseTransaction => expenseTransaction.id !== action.payload\r\n          )\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  incomeTransactions:\r\n    JSON.parse(localStorage.getItem(\"incomeTransactions\")) || [],\r\n  expenseTransactions:\r\n    JSON.parse(localStorage.getItem(\"expenseTransactions\")) || []\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"incomeTransactions\",\r\n      JSON.stringify(state.incomeTransactions)\r\n    );\r\n    localStorage.setItem(\r\n      \"expenseTransactions\",\r\n      JSON.stringify(state.expenseTransactions)\r\n    );\r\n  });\r\n\r\n  const deleteTransaction = id => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  const addIncome = incomeTransaction => {\r\n    dispatch({\r\n      type: \"ADD_INCOME\",\r\n      payload: incomeTransaction\r\n    });\r\n  };\r\n\r\n  const addExpense = expenseTransaction => {\r\n    dispatch({\r\n      type: \"ADD_EXPENSE\",\r\n      payload: expenseTransaction\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        incomeTransactions: state.incomeTransactions,\r\n        expenseTransactions: state.expenseTransactions,\r\n        deleteTransaction,\r\n        addIncome,\r\n        addExpense\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { incomeTransactions, expenseTransactions } = useContext(GlobalContext);\r\n\r\n  const incomeAmounts = incomeTransactions.map(\r\n    incomeTransaction => incomeTransaction.incomeAmount\r\n  );\r\n\r\n  const expenseAmounts = expenseTransactions.map(\r\n    expenseTransaction => expenseTransaction.expenseAmount\r\n  );\r\n\r\n  const totalIncome = incomeAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const totalExpenses = expenseAmounts\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Your Balance</h2>\r\n      <h3>${(totalIncome - totalExpenses).toFixed(2)}</h3>\r\n      <div className=\"income-expense\">\r\n        <div className=\"plus\">\r\n          <h3>Income</h3>\r\n          <p>+${totalIncome}</p>\r\n        </div>\r\n        <div className=\"minus\">\r\n          <h3>Expenses</h3>\r\n          <p>-${totalExpenses}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;","import React, { useState, useContext } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n    const { addIncome, addExpense } = useContext(GlobalContext);\r\n\r\n    const [income, setIncome] = useState({ //local state\r\n        incomeText: \"\",\r\n        incomeAmount: 0,\r\n    });\r\n\r\n    const { incomeText, incomeAmount } = income;\r\n\r\n    const onChangeIncome = (e) => {\r\n        setIncome({ ...income, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmitIncome = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (incomeText !== \"\") {\r\n            const newIncomeTransaction = {\r\n                id: uuidv4(),\r\n                incomeText,\r\n                incomeAmount: incomeAmount * 1, //transform string into number, works due to type coercion\r\n            };\r\n\r\n            addIncome(newIncomeTransaction);\r\n\r\n            setIncome({\r\n                incomeText: \"\",\r\n                incomeAmount: 0,\r\n            });\r\n        }\r\n    };\r\n\r\n    const [expense, setExpense] = useState({\r\n        expenseText: \"\",\r\n        expenseAmount: 0,\r\n    });\r\n\r\n    const { expenseText, expenseAmount } = expense;\r\n\r\n    const onChangeExpense = (e) => {\r\n        setExpense({ ...expense, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmitExpense = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (expenseText !== \"\") {\r\n            const newExpenseTransaction = {\r\n                id: uuidv4(),\r\n                expenseText,\r\n                expenseAmount: expenseAmount * 1,\r\n            };\r\n\r\n            addExpense(newExpenseTransaction);\r\n\r\n            setExpense({\r\n                expenseText: \"\",\r\n                expenseAmount: 0,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form onSubmit={onSubmitIncome}>\r\n                <div className=\"input-group income\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"incomeText\"\r\n                        value={incomeText}\r\n                        placeholder=\"Add Income...\"\r\n                        autoComplete=\"off\"\r\n                        onChange={onChangeIncome}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"incomeAmount\"\r\n                        value={incomeAmount}\r\n                        placeholder=\"Amount\"\r\n                        autoComplete=\"off\"\r\n                        onChange={onChangeIncome}\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n            <form onSubmit={onSubmitExpense}>\r\n                <div className=\"input-group expense\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"expenseText\"\r\n                        value={expenseText}\r\n                        placeholder=\"Add Expense...\"\r\n                        autoComplete=\"off\"\r\n                        onChange={onChangeExpense}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"expenseAmount\"\r\n                        value={expenseAmount}\r\n                        placeholder=\"Amount\"\r\n                        autoComplete=\"off\"\r\n                        onChange={onChangeExpense}\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTransaction;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeTransaction = ({ incomeTransaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <li className=\"transaction\">\r\n      <span className=\"transaction-text\">{incomeTransaction.incomeText}</span>\r\n      <span className=\"transaction-amount\">\r\n        ${incomeTransaction.incomeAmount}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(incomeTransaction.id)}\r\n        className=\"delete-btn\" \r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default IncomeTransaction;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport IncomeTransaction from \"./IncomeTransactions\";\r\n\r\nconst IncomeList = () => {\r\n  const { incomeTransactions } = useContext(GlobalContext);\r\n\r\n  console.log(incomeTransactions);\r\n\r\n  return (\r\n    <div className=\"transactions transactions-income\">\r\n      <h2>Transaction History</h2>\r\n      <ul className=\"transaction-list\">\r\n        {incomeTransactions.map(incomeTransaction => (\r\n          <IncomeTransaction\r\n            key={incomeTransaction.id}\r\n            incomeTransaction={incomeTransaction}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeList;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst ExpenseTransaction = ({ expenseTransaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <li className=\"transaction\">\r\n      <span className=\"transaction-text\">{expenseTransaction.expenseText}</span>\r\n      <span className=\"transaction-amount\">\r\n        ${expenseTransaction.expenseAmount}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(expenseTransaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseTransaction;","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport ExpenseTransaction from \"./ExpenseTransactions\";\r\n\r\nconst ExpenseList = () => {\r\n  const { expenseTransactions } = useContext(GlobalContext);\r\n\r\n  console.log(expenseTransactions);\r\n\r\n  return (\r\n    <div className=\"transactions transactions-expense\">\r\n      <h2>Transaction History</h2>\r\n      <ul className=\"transaction-list\">\r\n        {expenseTransactions.map(expenseTransaction => (\r\n          <ExpenseTransaction\r\n            key={expenseTransaction.id}\r\n            expenseTransaction={expenseTransaction}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport AddTransaction from './components/AddTransaction';\nimport IncomeList from './components/IncomeList';\nimport ExpenseList from './components/ExpenseList';\nimport {GlobalContextProvider} from './context/GlobalState';\nimport './App.css';\n\nconst App = () => {\n  return (\n  <GlobalContextProvider>\n   <div className=\"container\">\n    <div className=\"app-wrapper\">\n      <Header/>\n      <Balance/>\n      <AddTransaction/>\n      <IncomeList/>\n      <ExpenseList/>\n    </div>\n   </div>\n   </GlobalContextProvider>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}